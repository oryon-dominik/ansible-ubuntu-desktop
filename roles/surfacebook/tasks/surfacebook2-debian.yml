
- name: Import the keys used to sign the packages.
  become: yes
  ansible.builtin.shell: >
    wget -qO - https://raw.githubusercontent.com/linux-surface/linux-surface/master/pkg/keys/surface.asc
    | gpg --dearmor
    | sudo dd of=/etc/apt/trusted.gpg.d/linux-surface.gpg

- name: Add the repository configuration.
  become: yes
  ansible.builtin.shell: >
    echo "deb [arch=amd64] https://pkg.surfacelinux.com/debian release main"
    | sudo tee /etc/apt/sources.list.d/linux-surface.list

- name: Install the linux-surface kernel and its dependencies.
  become: yes
  ansible.builtin.apt:
    pkg:
      - linux-image-surface
      - linux-headers-surface
      - iptsd
      - libwacom-surface
    update_cache: yes

- name: Enable the iptsd service for touchscreen support.
  become: yes
  ansible.builtin.systemd:
    name: iptsd
    enabled: yes

- name: Install the official secureboot key into the bootloader.
  # This will import the key that the linux-surface kernel is signed with into the bootloader
  # so that the kernel is bootable without disabling secureboot.
  # ! This package will print instructions to the terminal that require a reboot
  # ! you have to follow the instructions to enable secure-boot on your device.
  become: yes
  ansible.builtin.apt:
    name: linux-surface-secureboot-mok
  register: surfacebook_bootloader_instructions


- name: Update the bootloader's configuration to make sure it was recognized.
  # The linux-surface kernel will be installed alongside the default kernel provided by the distribution.
  # This way you have a backup kernel you can use if something goes wrong.
  # The bootloader will pick up the kernel by default, but you should update.
  become: yes
  ansible.builtin.shell: update-grub


- name: Print bootloader instructions to stdout.
  ansible.builtin.debug:
    var: surfacebook_bootloader_instructions.stdout_lines
  when: surfacebook_bootloader_instructions is defined

- name: Print warning message to remember on enabling secure-boot.
  ansible.builtin.debug:
    msg:
    - "This installation prints instructions to the terminal that require a reboot."
    - "You have to follow the instructions to enable secure-boot on your device."
  when: surfacebook_bootloader_instructions is defined

- name: Install additional modules for surface book2
  become: yes
  ansible.builtin.apt:
    pkg:
      - surface-dtx-daemon  # better control to the clipboard detachment system
      - surface-control     # allowing control of the dGPU



# If you have issues with lower quality audio, you likely need to adjust your PulseAudio config: in /etc/pulse/daemon.conf set speex-float-5.

# You should install CPU microcode firmware for the latest CPU updates.
# Debian/Ubuntu: intel-microcode or amd64-microcode

# You should also install linux-firmware if you have not done so yet. Each
# device may need some additional firmware packages (depending on the
# distribution), please have a look at the device specific page for that.


# --- Additional information ---
# Currently, there is no such thing as system-wide support for touch gestures -
# it's up to the authors of individual applications to support touch controls. As
# such, you'll need to set up touch gestures on a per-application basis. By
# default, the system will behave as if you've clicked at the point of a single
# touch, or mouse-button dragged when you single-finger drag.

# Firefox is configured with the environment variable MOZ_USE_XINPUT2=1. You can
# enable it by copying that assignment into /etc/environment and restarting. This
# is only required if Firefox uses X11. If it uses Wayland, touch will work by
# default. To improve the zoom behaviour you can enable apz.allow_zoom in
# about:config.

# Visual Studio Code uses the command-line switch --touch-events. One way to
# enable this is by editing /usr/share/applications/code.desktop and adding the
# switch to the Exec lines. This might also work for other Electron-based
# applications.

# https://github.com/linux-surface/linux-surface/wiki/Installation-and-Setup




# thermald
# To avoid hardware-based throttling when the CPU overheats, which can severely
# limit performance, effectively reducing the CPU frequency to 400MHz for a
# prolonged time until the CPU has cooled down again, thermald can be used. Via
# thermald, the CPU is throttled earlier but not as hard, similar to the behavior
# on Windows.

# If your version of thermald supports the --adaptive switch it you don't need
# to configure it as it will load and parse the OEM configuration from ACPI. On
# older versions of thermald you can use the dptfxtract tool to automatically
# generate a configuration for thermald.

# A custom minimal thermald configuration for the Surface Book 2 can be found at contrib/thermald.


# Q: How do I use the discrete GPU?
# A: Have a look at the Surface Hotplug Wiki.

# Q: How do I prevent the dGPU from throttling?
# A: Change the performance mode. Consult the Surface Aggregator Module Wiki
# for details. Note: This only works when the AC is connected.

# TODO: install the font i've already used on nixos


